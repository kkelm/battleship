<!--
    10-152-112 Advanced Java
    build.xml for MVC Team Challenge
-->

<project default="deploy">
  <property name="user_home" value="${user.home}" />
  <property name="project_home" value="${user.dir}" />
  <property name="tomcat" value="${user_home}/tomcat" />
  <property name="src" value="src"/>
  <property name="battleship" value="${src}/battleship" />
  <property name="utilities" value="${src}/utilities" />
  <property name="config" value="config"/>
  <property name="build" value="build"/>
  <property name="dist" value="dist"/>
  <property name="lib" value="lib"/>
  <property name="WEB-INF" value="${build}/WEB-INF"/>
  <property name="META-INF" value="${build}/META-INF"/>
  <property name="web_classes" value="${WEB-INF}/classes"/>
  <property name="web_lib" value="${WEB-INF}/lib"/>
  <property name="build.compiler" value="modern"/>
  <property name="static" value="public_html" />
  <property name="battleship_lib" value="${project_home}/lib/battleship.jar" />
  <property name="hamcrest" value="${project_home}/lib/hamcrest.jar" />
  <property name="java_hamcrest" value="${project_home}/lib/java-hamcrest.jar" />
  <property name="battleship_project" value="present"/>

  <target name="init_battleship" if="battleship_project">
    <tstamp/>
    <mkdir dir="${build}"/>
    <mkdir dir="${build}/classes"/>
    <mkdir dir="${META-INF}"/>
    <mkdir dir="${dist}" />
    <mkdir dir="${WEB-INF}" />
    <mkdir dir="${web_classes}" />
    <mkdir dir="${WEB-INF}/lib" />
    <mkdir dir="${static}" />
    <mkdir dir="${static}/images" />
    <mkdir dir="${battleship}" />
    <mkdir dir="${utilities}" />
    <echo message="Initialization for battleship completed" />
  </target>

  <target name="init" depends="init_battleship">
    <tstamp/>
    <echo message="Initialization Complete" />
  </target>

  <target name="clean" description="Delete build and dist">
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
    <!-- <delete file="${analyzer_lib}" /> -->
  </target>

  <target name="compile_battleship" depends="init">
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}"
           destdir="${build}/classes"
           extdirs="${lib}"
           verbose="false"
           excludes="*.jsp,
                     *.html,
                     *.xml"
           deprecation="on"
           debug="on"
           includeAntRuntime="false" >
       <compilerarg value="-Xlint:unchecked"/>
     </javac>
    <echo message="Compile Complete" />
  </target>

  <target name="build_battleship" depends="backup, clean, compile_battleship">
    <jar destfile="${battleship_lib}">
      <fileset dir="${build}/classes" excludes="${build}/classes/battleship/tests/**" />
    </jar>
    <echo message="Build Complete" />
  </target>

  <target name="compile_web" depends="init">
    <javac srcdir="${src}"
      destdir="${web_classes}"
      extdirs="${lib}"
      verbose="false"
      includes="battleship/**,
                utilities/**"
      excludes="*.jsp,
                *.html,
                *.xml"
      deprecation="on"
      debug="on"
      includeAntRuntime="false"
    />
  </target>

  <target name="build_web" depends="backup, clean, compile_web">

    <copy todir="${web_classes}">
      <fileset dir="${config}"/>
    </copy>

    <!-- copy the images to the build/images dir-->
    <copy todir="${build}/images">
      <fileset dir="${static}/images"/>
    </copy>

    <!-- copy the JSP pages to the web-app dir-->
    <copy todir="${build}">
      <fileset dir="${static}">
        <include name="**/*.jsp"/>
      </fileset>
    </copy>

    <!-- copy the HTML pages to the web-app dir-->
    <copy todir="${build}">
      <fileset dir="${static}">
        <include name="**/*.html"/>
      </fileset>
    </copy>

    <!-- copy the css to the build/images dir-->
    <copy todir="${build}">
      <fileset dir="${static}">
        <include name="**/*.css"/>
      </fileset>
    </copy>

    <!-- copy the battleship.jar file to the lib directory -->
    <copy file="${battleship_lib}" todir="${web_lib}"/>

  </target>

  <target name="dist" depends="build_web">
    <war warfile="${dist}/battleship.war"
      webxml="${config}/web.xml"
      basedir="${build}">
    </war>
  </target>

  <target name="deploy" depends="dist">
    <copy file="${dist}/battleship.war" todir="${tomcat}/webapps"/>
  </target>

 <!--########################################################################
    |   jdoc - Generates JavaDoc                                               |
    #########################################################################-->
<!--
 <target name="jdoc">
   <javadoc packagenames="java112.analyzer.*,
                         java112.labs1.*,
                         java112.demos.*,
                         java112.labs2.*,
                         java112.labs3.*,
                         java112.labs4.*,
                         java112.project2.*,
                         java112.project3.*,
                         java112.project4.*,
                         java112.employee.*,
                         java112.utilities.*
                         "
            sourcepath="${src}"
            classpath="${lib}/servlet-api.jar"
            defaultexcludes="yes"
            destdir="docs/project_api"
            author="true"
            version="true"
            access="private">
   </javadoc>
 </target>
-->
<!--########################################################################
    |   submit_project - Compress project and place in public dropbox                     |
#########################################################################-->
<target name="backup">
  <delete file="${user_home}/backups/battleship_backup.tar.gz"/>
  <delete file="${user_home}/backups/battleship_with_git.tgz"/>

  <exec executable="tar">
    <arg value="-cf" />
    <arg value="${user_home}/backups/battleship_with_git.tar.gz" />
    <arg value="${project_home}" />
  </exec>

  <tar destfile="${user_home}/backups/battleship_backup.tgz"
       compression="gzip"
       basedir="${project_home}"
  />

  <echo message="Backup Files Created"/>
</target>

<!--########################################################################
    |   tcdown, tcup, tcbounce - Restarting tomcat                             |
#########################################################################-->
  <target name="tcdown">
    <exec dir="." executable="${tomcat}/bin/shutdown.sh" />
  </target>
  <target name="tcup">
    <exec dir="." executable="${tomcat}/bin/startup.sh" />
  </target>
  <target name="tcbounce">
    <antcall target="tcdown" />
    <sleep seconds="4" />
    <antcall target="tcup" />
  </target>

</project>
